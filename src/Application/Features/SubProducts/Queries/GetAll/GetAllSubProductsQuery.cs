//------------------------------------------------------------------------------
// <auto-generated>
//     This file is part of the CleanArchitecture.Blazor project.
//     Licensed to the .NET Foundation under the MIT license.
//     See the LICENSE file in the project root for more information.
//
//     Author: neozhu
//     Created Date: 2025-01-13
//     Last Modified: 2025-01-13
//     Description: 
//       Defines a query to retrieve all subproducts from the database. The result 
//       is cached to improve performance and reduce database load for repeated 
//       queries.
// </auto-generated>
//------------------------------------------------------------------------------

using CleanArchitecture.Blazor.Application.Features.SubProducts.DTOs;
using CleanArchitecture.Blazor.Application.Features.SubProducts.Mappers;
using CleanArchitecture.Blazor.Application.Features.SubProducts.Caching;

namespace CleanArchitecture.Blazor.Application.Features.SubProducts.Queries.GetAll;

public class GetAllSubProductsQuery : ICacheableRequest<IEnumerable<SubProductDto>>
{
   public string CacheKey => SubProductCacheKey.GetAllCacheKey;
   public IEnumerable<string>? Tags => SubProductCacheKey.Tags;
}

public class GetAllSubProductsQueryHandler :
     IRequestHandler<GetAllSubProductsQuery, IEnumerable<SubProductDto>>
{
    private readonly IApplicationDbContext _context;

    public GetAllSubProductsQueryHandler(
        IApplicationDbContext context)
    {
        _context = context;
    }

    public async Task<IEnumerable<SubProductDto>> Handle(GetAllSubProductsQuery request, CancellationToken cancellationToken)
    {
        var data = await _context.SubProducts.ProjectTo()
                                                .AsNoTracking()
                                                .ToListAsync(cancellationToken);
        return data;
    }
}


