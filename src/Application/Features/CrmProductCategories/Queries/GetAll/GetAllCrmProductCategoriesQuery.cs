//------------------------------------------------------------------------------
// <auto-generated>
//     This file is part of the CleanArchitecture.Blazor project.
//     Licensed to the .NET Foundation under the MIT license.
//     See the LICENSE file in the project root for more information.
//
//     Author: neozhu
//     Created Date: 2024-12-02
//     Last Modified: 2024-12-02
//     Description: 
//       Defines a query to retrieve all crmproductcategorys from the database. The result 
//       is cached to improve performance and reduce database load for repeated 
//       queries.
// </auto-generated>
//------------------------------------------------------------------------------

using CleanArchitecture.Blazor.Application.Features.CrmProductCategories.DTOs;
using CleanArchitecture.Blazor.Application.Features.CrmProductCategories.Mappers;
using CleanArchitecture.Blazor.Application.Features.CrmProductCategories.Caching;

namespace CleanArchitecture.Blazor.Application.Features.CrmProductCategories.Queries.GetAll;

public class GetAllCrmProductCategoriesQuery : ICacheableRequest<IEnumerable<CrmProductCategoryDto>>
{
   public string CacheKey => CrmProductCategoryCacheKey.GetAllCacheKey;
   public IEnumerable<string>? Tags => CrmProductCategoryCacheKey.Tags;
}

public class GetAllCrmProductCategoriesQueryHandler :
     IRequestHandler<GetAllCrmProductCategoriesQuery, IEnumerable<CrmProductCategoryDto>>
{
    private readonly IApplicationDbContext _context;

    public GetAllCrmProductCategoriesQueryHandler(
        IApplicationDbContext context)
    {
        _context = context;
    }

    public async Task<IEnumerable<CrmProductCategoryDto>> Handle(GetAllCrmProductCategoriesQuery request, CancellationToken cancellationToken)
    {
        var data = await _context.CrmProductCategories.ProjectTo()
                                                .AsNoTracking()
                                                .ToListAsync(cancellationToken);
        return data;
    }
}


