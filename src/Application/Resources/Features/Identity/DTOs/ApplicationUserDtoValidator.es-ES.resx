<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
      Microsoft ResX Schema 
      
      Version 2.0
      
      The primary goals of this format is to allow a simple XML format 
      that is mostly human readable. The generation and parsing of the 
      various data types are done through the TypeConverter classes 
      associated with the data types.
      
      Example:
      
      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>
                  
      There are any number of "resheader" rows that contain simple 
      name/value pairs.
      
      Each data row contains a name, and value. The row also contains a 
      type or mimetype. Type corresponds to a .NET class that support 
      text/value conversion through the TypeConverter architecture. 
      Classes that don't support this are serialized and stored with the 
      mimetype set.
      
      The mimetype is used for serialized objects, and tells the 
      ResXResourceReader how to depersist the object. This is currently not 
      extensible. For a given mimetype the value must be set accordingly:
      
      Note - application/x-microsoft.net.object.binary.base64 is the format 
      that the ResXResourceWriter will generate, however the reader can 
      read any of the formats listed below.
      
      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.
      
      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.
  
      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array 
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
  <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root" xmlns="">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <data name="Confirm password must match the new password" xml:space="preserve">
    <value>La confirmación de contraseña debe coincidir con la nueva contraseña</value>
  </data>
  <data name="Confirm password must match the password" xml:space="preserve">
    <value>La confirmación de contraseña debe coincidir con la contraseña</value>
  </data>
  <data name="Display name must be less than 128 characters" xml:space="preserve">
    <value>El nombre para mostrar debe tener menos de 128 caracteres</value>
  </data>
  <data name="E-mail cannot be empty" xml:space="preserve">
    <value>El correo electrónico no puede estar vacío</value>
  </data>
  <data name="E-mail must be a valid email address" xml:space="preserve">
    <value>El correo electrónico debe ser una dirección válida</value>
  </data>
  <data name="E-mail must be less than 100 characters" xml:space="preserve">
    <value>El correo electrónico debe tener menos de 100 caracteres</value>
  </data>
  <data name="New password cannot be empty" xml:space="preserve">
    <value>La nueva contraseña no puede estar vacía</value>
  </data>
  <data name="Password cannot be empty" xml:space="preserve">
    <value>La contraseña no puede estar vacía</value>
  </data>
  <data name="Password cannot be longer than {0} characters" xml:space="preserve">
    <value>La contraseña no puede tener más de {0} caracteres</value>
  </data>
  <data name="Password must be at least {0} characters long" xml:space="preserve">
    <value>La contraseña debe tener al menos {0} caracteres</value>
  </data>
  <data name="Password must contain at least one digit" xml:space="preserve">
    <value>La contraseña debe contener al menos un dígito</value>
  </data>
  <data name="Password must contain at least one lowercase letter" xml:space="preserve">
    <value>La contraseña debe contener al menos una letra minúscula</value>
  </data>
  <data name="Password must contain at least one non-alphanumeric character (e.g., @, !, ?, *, .)" xml:space="preserve">
    <value>La contraseña debe contener al menos un carácter no alfanumérico (ej. @, !, ?, *, .)</value>
  </data>
  <data name="Password must contain at least one uppercase letter" xml:space="preserve">
    <value>La contraseña debe contener al menos una letra mayúscula</value>
  </data>
  <data name="Phone number must be between 1 and 20 digits" xml:space="preserve">
    <value>El número de teléfono debe tener entre 1 y 20 dígitos</value>
  </data>
  <data name="User name cannot be empty" xml:space="preserve">
    <value>El nombre de usuario no puede estar vacío</value>
  </data>
  <data name="User name must be between 2 and 100 characters" xml:space="preserve">
    <value>El nombre de usuario debe tener entre 2 y 100 caracteres</value>
  </data>
  <data name="You must agree to the terms and conditions" xml:space="preserve">
    <value>Debe aceptar los términos y condiciones</value>
  </data>
  <data name="Tenant name cannot be empty" xml:space="preserve">
    <value>El nombre del inquilino no puede estar vacío</value>
  </data>
  <data name="Tenant id must be less than 128 characters" xml:space="preserve">
    <value>El ID del inquilino debe tener menos de 128 caracteres</value>
  </data>
  <data name="Provider must be less than 100 characters" xml:space="preserve">
    <value>El proveedor debe tener menos de 100 caracteres</value>
  </data>
  <data name="Provider cannot be empty" xml:space="preserve">
    <value>El proveedor no puede estar vacío</value>
  </data>
  <data name="Phone number must be less than 20 digits" xml:space="preserve">
    <value>El número de teléfono debe tener menos de 20 dígitos</value>
  </data>
</root>