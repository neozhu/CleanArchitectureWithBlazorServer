<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Assign Roles" xml:space="preserve">
    <value>Assign Roles</value>
  </data>
  <data name="Click upload a photo" xml:space="preserve">
    <value>Click upload a photo</value>
  </data>
  <data name="Confirm New Password" xml:space="preserve">
    <value>Confirm New Password</value>
  </data>
  <data name="confirm password is required!" xml:space="preserve">
    <value>confirm password is required!</value>
  </data>
  <data name="Create a new user" xml:space="preserve">
    <value>Create a new user</value>
  </data>
  <data name="Edit the user" xml:space="preserve">
    <value>Edit the user</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Is Active" xml:space="preserve">
    <value>Is Active</value>
  </data>
  <data name="Lock Status" xml:space="preserve">
    <value>Lock Status</value>
  </data>
  <data name="New Password" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="password is required!" xml:space="preserve">
    <value>password is required!</value>
  </data>
  <data name="Phone Number" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Reset password successfully" xml:space="preserve">
    <value>Reset password successfully</value>
  </data>
  <data name="Search by user name" xml:space="preserve">
    <value>Search for user name</value>
  </data>
  <data name="Select Tenant" xml:space="preserve">
    <value>Select Tenant</value>
  </data>
  <data name="Set Active" xml:space="preserve">
    <value>Set Active</value>
  </data>
  <data name="Set Inactive" xml:space="preserve">
    <value>Set Inactive</value>
  </data>
  <data name="Set Password" xml:space="preserve">
    <value>Set Password</value>
  </data>
  <data name="Site" xml:space="preserve">
    <value>Site</value>
  </data>
  <data name="Tenant Name" xml:space="preserve">
    <value>Tenant Name</value>
  </data>
  <data name="User Name" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="{0} session changed" xml:space="preserve">
    <value>{0} session changed</value>
  </data>
  <data name="Superior Name" xml:space="preserve">
    <value>Superior Name</value>
  </data>
  <data name="Provider" xml:space="preserve">
    <value>Provider</value>
  </data>
  <data name="Select Superior" xml:space="preserve">
    <value>Select Superior</value>
  </data>
  <data name="E-mail" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Confirm Password" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Display Name" xml:space="preserve">
    <value>Display Name</value>
  </data>
  <data name="Set Permissions" xml:space="preserve">
    <value>Set Permissions</value>
  </data>
  <data name="Assigned Roles" xml:space="preserve">
    <value>Assigned Roles</value>
  </data>
  <data name="Email / PhoneNumber" xml:space="preserve">
    <value>Email / PhoneNumber</value>
  </data>
  <data name="Permission removed successfully" xml:space="preserve">
    <value>Permission removed successfully</value>
  </data>
  <data name="Reset Password" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="Display Name / PhoneNumber" xml:space="preserve">
    <value>Display Name / PhoneNumber</value>
  </data>
  <data name="Permission assigned successfully" xml:space="preserve">
    <value>Permission assigned successfully</value>
  </data>
  <data name="Recovery email sent. Please check your inbox to set a new password" xml:space="preserve">
    <value>Recovery email sent. Please check your inbox to set a new password</value>
  </data>
  <data name="The user has been activated" xml:space="preserve">
    <value>The user has been activated</value>
  </data>
  <data name="The user has been inactivated" xml:space="preserve">
    <value>The user has been inactivated</value>
  </data>
  <data name="New user created successfully" xml:space="preserve">
    <value>New user created successfully</value>
  </data>
  <data name="The user updated successfully" xml:space="preserve">
    <value>The user updated successfully</value>
  </data>
  <data name="Full Name" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="We send a verification link to this email address. The link expires after 72 hours" xml:space="preserve">
    <value>We send a verification link to this email address. The link expires after 72 hours</value>
  </data>
  <data name="Click to change status to active" xml:space="preserve">
    <value>Click to change status to active</value>
  </data>
  <data name="You cannot delete your own account!" xml:space="preserve">
    <value>You cannot delete your own account!</value>
  </data>
  <data name="Verification email sent to {0}" xml:space="preserve">
    <value>Verification email sent to {0}</value>
  </data>
  <data name="A new password for {0} has been sent via email. The user will be required to enter a new password upon initial login" xml:space="preserve">
    <value>A new password for {0} has been sent via email. The user will be required to enter a new password upon initial login</value>
  </data>
  <data name="Authorization has been changed" xml:space="preserve">
    <value>Authorization has been changed</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Click to change status to inactive" xml:space="preserve">
    <value>Click to change status to inactive</value>
  </data>
  <data name="Inactive" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="Send Reset Password Email" xml:space="preserve">
    <value>Send Reset Password Email</value>
  </data>
  <data name="No permission to change status" xml:space="preserve">
    <value>No permission to change status</value>
  </data>
  <data name="No roles available for this tenant" xml:space="preserve">
    <value>No roles available for this tenant</value>
  </data>
  <data name="Search by role name" xml:space="preserve">
    <value>Search by role name</value>
  </data>
  <data name="Tenant" xml:space="preserve">
    <value>Tenant</value>
  </data>
  <data name="Superior" xml:space="preserve">
    <value>Superior</value>
  </data>
  <data name="Created At" xml:space="preserve">
    <value>Created At</value>
  </data>
  <data name="Created By" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="Last Modified At" xml:space="preserve">
    <value>Last Modified At</value>
  </data>
  <data name="Last Modified By" xml:space="preserve">
    <value>Last Modified By</value>
  </data>
  <data name="Time Zone" xml:space="preserve">
    <value>Time Zone</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Select tenants" xml:space="preserve">
    <value>Select tenants</value>
  </data>
  <data name="Choose one or more tenants" xml:space="preserve">
    <value>Choose one or more tenants</value>
  </data>
  <data name="tenants are required" xml:space="preserve">
    <value>Tenants are required</value>
  </data>
  <data name="Enter a user name" xml:space="preserve">
    <value>Enter a user name</value>
  </data>
  <data name="User name is required" xml:space="preserve">
    <value>User name is required</value>
  </data>
  <data name="Enter a display name" xml:space="preserve">
    <value>Enter a display name</value>
  </data>
  <data name="Search by user name or email" xml:space="preserve">
    <value>Search by user name or email</value>
  </data>
  <data name="Enter the user's email address" xml:space="preserve">
    <value>Enter the user's email address</value>
  </data>
  <data name="Email address is required" xml:space="preserve">
    <value>Email address is required</value>
  </data>
  <data name="Please enter a valid email address" xml:space="preserve">
    <value>Please enter a valid email address</value>
  </data>
  <data name="Enter a phone number" xml:space="preserve">
    <value>Enter a phone number</value>
  </data>
  <data name="Select a time zone" xml:space="preserve">
    <value>Select a time zone</value>
  </data>
  <data name="Select a language" xml:space="preserve">
    <value>Select a language</value>
  </data>
</root>
