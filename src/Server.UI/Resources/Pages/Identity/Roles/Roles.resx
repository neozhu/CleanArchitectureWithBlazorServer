<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
        Microsoft ResX Schema 
        
        Version 2.0
        
        The primary goals of this format is to allow a simple XML format 
        that is mostly human readable. The generation and parsing of the 
        various data types are done through the TypeConverter classes 
        associated with the data types.
        
        Example:
        
        ... ado.net/XML headers & schema ...
        <resheader name="resmimetype">text/microsoft-resx</resheader>
        <resheader name="version">2.0</resheader>
        <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
        <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
        <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
        <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
        <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
            <value>[base64 mime encoded serialized .NET Framework object]</value>
        </data>
        <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
            <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
            <comment>This is a comment</comment>
        </data>
                    
        There are any number of "resheader" rows that contain simple 
        name/value pairs.
        
        Each data row contains a name, and value. The row also contains a 
        type or mimetype. Type corresponds to a .NET class that support 
        text/value conversion through the TypeConverter architecture. 
        Classes that don't support this are serialized and stored with the 
        mimetype set.
        
        The mimetype is used for serialized objects, and tells the 
        ResXResourceReader how to depersist the object. This is currently not 
        extensible. For a given mimetype the value must be set accordingly:
        
        Note - application/x-microsoft.net.object.binary.base64 is the format 
        that the ResXResourceWriter will generate, however the reader can 
        read any of the formats listed below.
        
        mimetype: application/x-microsoft.net.object.binary.base64
        value   : The object must be serialized with 
                : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
                : and then encoded with base64 encoding.
        
        mimetype: application/x-microsoft.net.object.soap.base64
        value   : The object must be serialized with 
                : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
                : and then encoded with base64 encoding.
    
        mimetype: application/x-microsoft.net.object.bytearray.base64
        value   : The object must be serialized into a byte array 
                : using a System.ComponentModel.TypeConverter
                : and then encoded with base64 encoding.
        -->
  <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root" xmlns="">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <data name="Assign changed successfully" xml:space="preserve">
    <value>Assign changed successfully</value>
  </data>
  <data name="Assigned successfully" xml:space="preserve">
    <value>Assigned successfully</value>
  </data>
  <data name="Create a new role" xml:space="preserve">
    <value>Create a new role</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Edit the role" xml:space="preserve">
    <value>Edit the role</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Search by role name" xml:space="preserve">
    <value>Search for role name</value>
  </data>
  <data name="Set Permissions" xml:space="preserve">
    <value>Set Permissions</value>
  </data>
  <data name="Unassigned successfully" xml:space="preserve">
    <value>Unassigned successfully</value>
  </data>
  <data name="Assigned Roles" xml:space="preserve">
    <value>Assigned Roles</value>
  </data>
  <data name="Email / PhoneNumber" xml:space="preserve">
    <value>Email / PhoneNumber</value>
  </data>
  <data name="Selected" xml:space="preserve">
    <value>Selected</value>
  </data>
  <data name="Permission assigned successfully" xml:space="preserve">
    <value>Permission assigned successfully</value>
  </data>
  <data name="Permission removed successfully" xml:space="preserve">
    <value>Permission removed successfully</value>
  </data>
  <data name="Authorization has been changed" xml:space="preserve">
    <value>Authorization has been changed</value>
  </data>
  <data name="Assign or Unassign all" xml:space="preserve">
    <value>Assign or Unassign all</value>
  </data>
  <data name="Permission" xml:space="preserve">
    <value>Permission</value>
  </data>
  <data name="Permission Description" xml:space="preserve">
    <value>Permission Description</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Products Permissions" xml:space="preserve">
    <value>Products Permissions</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Categories Permissions" xml:space="preserve">
    <value>Categories Permissions</value>
  </data>
  <data name="Documents" xml:space="preserve">
    <value>Documents</value>
  </data>
  <data name="Documents Permissions" xml:space="preserve">
    <value>Documents Permissions</value>
  </data>
  <data name="Customers" xml:space="preserve">
    <value>Customers</value>
  </data>
  <data name="Customers Permissions" xml:space="preserve">
    <value>Customers Permissions</value>
  </data>
  <data name="Audit Trails" xml:space="preserve">
    <value>Audit Trails</value>
  </data>
  <data name="Audit Trails Permissions" xml:space="preserve">
    <value>Audit Trails Permissions</value>
  </data>
  <data name="Logs" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="Logs Permissions" xml:space="preserve">
    <value>Logs Permissions</value>
  </data>
  <data name="Picklist Permissions" xml:space="preserve">
    <value>Picklist Permissions</value>
  </data>
  <data name="Picklist" xml:space="preserve">
    <value>Picklist</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Users Permissions" xml:space="preserve">
    <value>Users Permissions</value>
  </data>
  <data name="Roles Permissions" xml:space="preserve">
    <value>Roles Permissions</value>
  </data>
  <data name="Multi-Tenant" xml:space="preserve">
    <value>Multi-Tenant</value>
  </data>
  <data name="Multi-Tenant Permissions" xml:space="preserve">
    <value>Multi-Tenant Permissions</value>
  </data>
  <data name="Role Claims" xml:space="preserve">
    <value>Role Claims</value>
  </data>
  <data name="Role Claims Permissions" xml:space="preserve">
    <value>Role Claims Permissions</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="Dashboard Permissions" xml:space="preserve">
    <value>Dashboard Permissions</value>
  </data>
  <data name="Job" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="Job Permissions" xml:space="preserve">
    <value>Job Permissions</value>
  </data>
  <data name="Normalized Name" xml:space="preserve">
    <value>Normalized Name</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="Tenant Name" xml:space="preserve">
    <value>Tenant Name</value>
  </data>
  <data name="Enter role name" xml:space="preserve">
    <value>Enter role name</value>
  </data>
  <data name="Enter description for this role" xml:space="preserve">
    <value>Enter description for this role</value>
  </data>
</root>
