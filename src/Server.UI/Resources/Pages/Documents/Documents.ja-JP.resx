<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
        Microsoft ResX Schema 
        
        Version 2.0
        
        The primary goals of this format is to allow a simple XML format 
        that is mostly human readable. The generation and parsing of the 
        various data types are done through the TypeConverter classes 
        associated with the data types.
        
        Example:
        
        ... ado.net/XML headers & schema ...
        <resheader name="resmimetype">text/microsoft-resx</resheader>
        <resheader name="version">2.0</resheader>
        <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
        <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
        <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
        <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
        <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
            <value>[base64 mime encoded serialized .NET Framework object]</value>
        </data>
        <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
            <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
            <comment>This is a comment</comment>
        </data>
                    
        There are any number of "resheader" rows that contain simple 
        name/value pairs.
        
        Each data row contains a name, and value. The row also contains a 
        type or mimetype. Type corresponds to a .NET class that support 
        text/value conversion through the TypeConverter architecture. 
        Classes that don't support this are serialized and stored with the 
        mimetype set.
        
        The mimetype is used for serialized objects, and tells the 
        ResXResourceReader how to depersist the object. This is currently not 
        extensible. For a given mimetype the value must be set accordingly:
        
        Note - application/x-microsoft.net.object.binary.base64 is the format 
        that the ResXResourceWriter will generate, however the reader can 
        read any of the formats listed below.
        
        mimetype: application/x-microsoft.net.object.binary.base64
        value   : The object must be serialized with 
                : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
                : and then encoded with base64 encoding.
        
        mimetype: application/x-microsoft.net.object.soap.base64
        value   : The object must be serialized with 
                : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
                : and then encoded with base64 encoding.
    
        mimetype: application/x-microsoft.net.object.bytearray.base64
        value   : The object must be serialized into a byte array 
                : using a System.ComponentModel.TypeConverter
                : and then encoded with base64 encoding.
        -->
  <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root" xmlns="">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <data name="Attachement" xml:space="preserve">
    <value>添付ファイル</value>
  </data>
  <data name="Document Type" xml:space="preserve">
    <value>ドキュメントタイプ</value>
  </data>
  <data name="Document type is required!" xml:space="preserve">
    <value>書類の種類は必須です。</value>
  </data>
  <data name="Documents" xml:space="preserve">
    <value>書類</value>
  </data>
  <data name="Is Public" xml:space="preserve">
    <value>公開されています</value>
  </data>
  <data name="Select Document Type" xml:space="preserve">
    <value>ドキュメントの種類を選択してください</value>
  </data>
  <data name="Tenant Name" xml:space="preserve">
    <value>テナント名</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>タイトル</value>
  </data>
  <data name="Title is required!" xml:space="preserve">
    <value>タイトルは必須です！</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>アップロード</value>
  </data>
  <data name="Upload successfully" xml:space="preserve">
    <value>アップロードに成功しました</value>
  </data>
  <data name="{0} job started." xml:space="preserve">
    <value>{0} ジョブが開始されました。</value>
  </data>
  <data name="{0} recognize completed." xml:space="preserve">
    <value>{0} の認識が完了しました。</value>
  </data>
  <data name="Choose files" xml:space="preserve">
    <value>ファイルの選択</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>コンテンツ</value>
  </data>
  <data name="Only .jpg and .png files are allowed." xml:space="preserve">
    <value>.jpg および .png ファイルのみが許可されます。</value>
  </data>
  <data name="Please click [Choose Files] button to upload your photo." xml:space="preserve">
    <value>[ファイルを選択]ボタンをクリックして写真をアップロードしてください。</value>
  </data>
  <data name="Recognize result" xml:space="preserve">
    <value>結果を認識する</value>
  </data>
  <data name="Upload Pictures" xml:space="preserve">
    <value>写真をアップロードする</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>ダウンロード</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>所有者</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>ステータス</value>
  </data>
  <data name="Created By User" xml:space="preserve">
    <value>ユーザーによって作成</value>
  </data>
</root>