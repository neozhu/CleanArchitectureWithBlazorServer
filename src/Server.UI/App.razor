@using Microsoft.AspNetCore.Antiforgery
@inject IHttpContextAccessor accessor
@inject IAntiforgery Antiforgery
@{
    // 在首次加载时把 Token 写进 Cookie，并拿到 RequestToken
    var tokens = Antiforgery.GetAndStoreTokens(accessor.HttpContext);
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="/"/>
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet"/>
    <link href="@Assets["_content/MudBlazor/MudBlazor.min.css"]" rel="stylesheet"/>
    <link href="@Assets["css/app.css"]" rel="stylesheet"/>
    <HeadOutlet @rendermode="RenderModeForPage"/>
    <ImportMap />
    <meta name="xsrf-token" content="@tokens.RequestToken" />
    <!-- Enhanced SEO Meta Tags -->
    <meta name="description" content="Enterprise-ready Blazor Server application template built with Clean Architecture principles, featuring comprehensive dashboard, user management, and modern web technologies." />
    <meta name="keywords" content="Blazor Server, Clean Architecture, Dashboard, .NET, Enterprise Application, Web Development, CQRS, MudBlazor, Authentication, Authorization" />
    <meta name="author" content="Blazor Studio" />
    <meta name="robots" content="index, follow" />
    <meta name="application-name" content="Clean Architecture Blazor Server" />
    <meta name="generator" content="Blazor Server" />
    <meta name="theme-color" content="#1976d2" />
    
    <!-- Open Graph Tags -->
    <meta property="og:title" content="Clean Architecture With Blazor Server - Enterprise Dashboard" />
    <meta property="og:description" content="Enterprise-ready Blazor Server application template built with Clean Architecture principles, featuring comprehensive dashboard, user management, and modern web technologies." />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://architecture.blazorserver.com" />
    <meta property="og:site_name" content="Clean Architecture Blazor Server" />
    <meta property="og:locale" content="en_US" />
    <meta property="og:image" content="https://architecture.blazorserver.com/img/blazorstudio.png" />
    <meta property="og:image:alt" content="Clean Architecture Blazor Server Dashboard" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    
    <!-- Twitter Card Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Clean Architecture With Blazor Server - Enterprise Dashboard" />
    <meta name="twitter:description" content="Enterprise-ready Blazor Server application template built with Clean Architecture principles." />
    <meta name="twitter:image" content="https://architecture.blazorserver.com/img/blazorstudio.png" />
    <meta name="twitter:image:alt" content="Clean Architecture Blazor Server Dashboard" />
    
    <!-- JSON-LD Structured Data -->
    <script type="application/ld+json">
    {
        "@@context": "https://schema.org",
        "@@type": "WebApplication",
        "name": "Clean Architecture With Blazor Server",
        "description": "Enterprise-ready Blazor Server application template built with Clean Architecture principles",
        "url": "https://architecture.blazorserver.com",
        "applicationCategory": "BusinessApplication",
        "operatingSystem": "Web Browser",
        "offers": {
            "@@type": "Offer",
            "price": "0",
            "priceCurrency": "USD"
        },
        "featureList": [
            "Clean Architecture Implementation",
            "User Management System", 
            "Document Management",
            "Contact Management",
            "Product Catalog",
            "Real-time Dashboard",
            "Multi-language Support",
            "Role-based Access Control"
        ]
    }
    </script>
    
    <title>Clean Architecture With Blazor Server - Enterprise Dashboard</title>
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-W1TQBGC3QH"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', 'G-W1TQBGC3QH');
    </script>
</head>

<body>
    <Routes @rendermode="RenderModeForPage"/>
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js" integrity="sha512-CNgIRecGo7nphbeZ04Sc13ka07paqdeTu0WR1IM4kNcpmBAUSHSQX0FslNhTDadL4O5SAGapGt4FodqL8My0mA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</body>

</html>

@code {
   private IComponentRenderMode? RenderModeForPage =>  new InteractiveServerRenderMode(false);

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

}